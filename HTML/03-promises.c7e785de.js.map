{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IApCMO,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAaC,OAAOH,EAAMI,cAAcC,SAASf,MAAMgB,OACvDC,EAAYJ,OAAOH,EAAMI,cAAcC,SAASG,KAAKF,OACrDG,EAAcN,OAAOH,EAAMI,cAAcC,SAASK,OAAOJ,OAEpDK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrCvB,EAAcuB,EAAGT,GACdU,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGjD4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAIjDY,GAAcK,C","sources":["src/JS/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delayInput = Number(event.currentTarget.elements.delay.value);\n  let stepInput = Number(event.currentTarget.elements.step.value);\n  let amountInput = Number(event.currentTarget.elements.amount.value); \n\n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delayInput += stepInput;\n  }\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n"],"names":["$6JpON","parcelRequire","$0461a1793d45166d$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delayInput","Number","currentTarget","elements","value","stepInput","step","amountInput","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.c7e785de.js.map"}